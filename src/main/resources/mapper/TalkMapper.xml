<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.briup.party.dao.TalkMapper" >
  <resultMap id="BaseResultMap" type="com.briup.party.bean.table.Talk" >
    <id column="id" property="id" jdbcType="SMALLINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="time" property="time" jdbcType="CHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="speaker" property="speaker" jdbcType="VARCHAR" />
    <result column="speaker_job" property="speakerJob" jdbcType="VARCHAR" />
    <result column="listener" property="listener" jdbcType="VARCHAR" />
    <result column="listener_job" property="listenerJob" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="url_note" property="urlNote" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="SMALLINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, time, address, speaker, speaker_job, listener, listener_job, content, url_note, 
    user_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Short" >
    select 
    <include refid="Base_Column_List" />
    from talk
    where id = #{id,jdbcType=SMALLINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Short" >
    delete from talk
    where id = #{id,jdbcType=SMALLINT}
  </delete>
  <insert id="insert" parameterType="com.briup.party.bean.table.Talk" >
    <selectKey resultType="java.lang.Short" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into talk (name, time, address, 
      speaker, speaker_job, listener, 
      listener_job, content, url_note, 
      user_id)
    values (#{name,jdbcType=VARCHAR}, #{time,jdbcType=CHAR}, #{address,jdbcType=VARCHAR}, 
      #{speaker,jdbcType=VARCHAR}, #{speakerJob,jdbcType=VARCHAR}, #{listener,jdbcType=VARCHAR}, 
      #{listenerJob,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{urlNote,jdbcType=VARCHAR}, 
      #{userId,jdbcType=SMALLINT})
  </insert>
  <insert id="insertSelective" parameterType="com.briup.party.bean.table.Talk" >
    <selectKey resultType="java.lang.Short" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into talk
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        name,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="speaker != null" >
        speaker,
      </if>
      <if test="speakerJob != null" >
        speaker_job,
      </if>
      <if test="listener != null" >
        listener,
      </if>
      <if test="listenerJob != null" >
        listener_job,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="urlNote != null" >
        url_note,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        #{time,jdbcType=CHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="speaker != null" >
        #{speaker,jdbcType=VARCHAR},
      </if>
      <if test="speakerJob != null" >
        #{speakerJob,jdbcType=VARCHAR},
      </if>
      <if test="listener != null" >
        #{listener,jdbcType=VARCHAR},
      </if>
      <if test="listenerJob != null" >
        #{listenerJob,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="urlNote != null" >
        #{urlNote,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.briup.party.bean.table.Talk" >
    update talk
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=CHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="speaker != null" >
        speaker = #{speaker,jdbcType=VARCHAR},
      </if>
      <if test="speakerJob != null" >
        speaker_job = #{speakerJob,jdbcType=VARCHAR},
      </if>
      <if test="listener != null" >
        listener = #{listener,jdbcType=VARCHAR},
      </if>
      <if test="listenerJob != null" >
        listener_job = #{listenerJob,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="urlNote != null" >
        url_note = #{urlNote,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=SMALLINT},
      </if>
    </set>
    where id = #{id,jdbcType=SMALLINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.briup.party.bean.table.Talk" >
    update talk
    set name = #{name,jdbcType=VARCHAR},
      time = #{time,jdbcType=CHAR},
      address = #{address,jdbcType=VARCHAR},
      speaker = #{speaker,jdbcType=VARCHAR},
      speaker_job = #{speakerJob,jdbcType=VARCHAR},
      listener = #{listener,jdbcType=VARCHAR},
      listener_job = #{listenerJob,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      url_note = #{urlNote,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=SMALLINT}
    where id = #{id,jdbcType=SMALLINT}
  </update>

  <select id="findByUserId" parameterType="java.lang.Short" resultType="com.briup.party.bean.table.Talk">
    select * from talk
    where user_id = #{userId}
  </select>
  <select id="findByUserIdArray" parameterType="java.util.List" resultType="com.briup.party.bean.table.Talk">
    select * from talk where user_id in
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>

  </select>
</mapper>